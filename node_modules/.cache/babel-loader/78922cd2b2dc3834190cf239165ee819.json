{"ast":null,"code":"import _slicedToArray from\"/home/r1701/Downloads/react-mqtt-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext}from'react';import{Card,Form,Input,Row,Col,Button,Select}from'antd';import{QosOption}from'./index';var Subscriber=function Subscriber(_ref){var deviceID=_ref.deviceID,sub=_ref.sub,unSub=_ref.unSub,showUnsub=_ref.showUnsub;var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var qosOptions=useContext(QosOption);var record={topic:'/devices/'+deviceID+'/reading',qos:0};var onFinish=function onFinish(values){sub(values);};var handleUnsub=function handleUnsub(){var values=form.getFieldsValue();unSub(values);};var SubForm=/*#__PURE__*/React.createElement(Form,{layout:\"vertical\",name:\"basic\",form:form,initialValues:record,onFinish:onFinish},/*#__PURE__*/React.createElement(Row,{gutter:20},/*#__PURE__*/React.createElement(Col,{span:12},/*#__PURE__*/React.createElement(Form.Item,{label:\"Topic\",name:\"topic\"},/*#__PURE__*/React.createElement(Input,null))),/*#__PURE__*/React.createElement(Col,{span:12},/*#__PURE__*/React.createElement(Form.Item,{label:\"QoS\",name:\"qos\"},/*#__PURE__*/React.createElement(Select,{options:qosOptions}))),/*#__PURE__*/React.createElement(Col,{span:8,offset:16,style:{textAlign:'right'}},/*#__PURE__*/React.createElement(Form.Item,null,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"Subscribe\"),showUnsub?/*#__PURE__*/React.createElement(Button,{type:\"danger\",style:{marginLeft:'10px'},onClick:handleUnsub},\"Unsubscribe\"):null))));return/*#__PURE__*/React.createElement(Card,{title:\"Subscriber\"},SubForm);};export default Subscriber;","map":{"version":3,"sources":["/home/r1701/Downloads/react-mqtt-master/src/components/Hook/Subscriber.js"],"names":["React","useContext","Card","Form","Input","Row","Col","Button","Select","QosOption","Subscriber","deviceID","sub","unSub","showUnsub","useForm","form","qosOptions","record","topic","qos","onFinish","values","handleUnsub","getFieldsValue","SubForm","textAlign","marginLeft"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,KAArB,CAA4BC,GAA5B,CAAiCC,GAAjC,CAAsCC,MAAtC,CAA8CC,MAA9C,KAA4D,MAA5D,CACA,OAASC,SAAT,KAA0B,SAA1B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAyC,IAAtCC,CAAAA,QAAsC,MAAtCA,QAAsC,CAA5BC,GAA4B,MAA5BA,GAA4B,CAAvBC,KAAuB,MAAvBA,KAAuB,CAAhBC,SAAgB,MAAhBA,SAAgB,mBAC3CX,IAAI,CAACY,OAAL,EAD2C,gDACnDC,IADmD,mBAE1D,GAAMC,CAAAA,UAAU,CAAGhB,UAAU,CAACQ,SAAD,CAA7B,CAEA,GAAMS,CAAAA,MAAM,CAAG,CACbC,KAAK,CAAE,YAAaR,QAAb,CAAuB,UADjB,CAEbS,GAAG,CAAE,CAFQ,CAAf,CAKA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAY,CAC3BV,GAAG,CAACU,MAAD,CAAH,CACD,CAFD,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMD,CAAAA,MAAM,CAAGN,IAAI,CAACQ,cAAL,EAAf,CACAX,KAAK,CAACS,MAAD,CAAL,CACD,CAHD,CAKA,GAAMG,CAAAA,OAAO,cACX,oBAAC,IAAD,EACE,MAAM,CAAC,UADT,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAET,IAHR,CAIE,aAAa,CAAEE,MAJjB,CAKE,QAAQ,CAAEG,QALZ,eAOE,oBAAC,GAAD,EAAK,MAAM,CAAE,EAAb,eACE,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,eACE,oBAAC,IAAD,CAAM,IAAN,EACE,KAAK,CAAC,OADR,CAEE,IAAI,CAAC,OAFP,eAIE,oBAAC,KAAD,MAJF,CADF,CADF,cASE,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,eACE,oBAAC,IAAD,CAAM,IAAN,EACE,KAAK,CAAC,KADR,CAEE,IAAI,CAAC,KAFP,eAIE,oBAAC,MAAD,EAAQ,OAAO,CAAEJ,UAAjB,EAJF,CADF,CATF,cAiBE,oBAAC,GAAD,EAAK,IAAI,CAAE,CAAX,CAAc,MAAM,CAAE,EAAtB,CAA0B,KAAK,CAAE,CAAES,SAAS,CAAE,OAAb,CAAjC,eACE,oBAAC,IAAD,CAAM,IAAN,mBACE,oBAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,QAAQ,CAAC,QAAhC,cADF,CAKIZ,SAAS,cACP,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAE,CAAEa,UAAU,CAAE,MAAd,CAA7B,CAAqD,OAAO,CAAEJ,WAA9D,gBADO,CAIL,IATR,CADF,CAjBF,CAPF,CADF,CA2CA,mBACE,oBAAC,IAAD,EACE,KAAK,CAAC,YADR,EAGGE,OAHH,CADF,CAOD,CApED,CAsEA,cAAef,CAAAA,UAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Card, Form, Input, Row, Col, Button, Select } from 'antd';\nimport { QosOption } from './index'\n\nconst Subscriber = ({ deviceID, sub, unSub, showUnsub }) => {\n  const [form] = Form.useForm();\n  const qosOptions = useContext(QosOption);\n\n  const record = {\n    topic: '/devices/'+ deviceID +'/reading',\n    qos: 0,\n  };\n\n  const onFinish = (values) => {\n    sub(values);\n  };\n\n  const handleUnsub = () => {\n    const values = form.getFieldsValue();\n    unSub(values);\n  };\n\n  const SubForm = (\n    <Form\n      layout=\"vertical\"\n      name=\"basic\"\n      form={form}\n      initialValues={record}\n      onFinish={onFinish}\n    >\n      <Row gutter={20}>\n        <Col span={12}>\n          <Form.Item\n            label=\"Topic\"\n            name=\"topic\"\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            label=\"QoS\"\n            name=\"qos\"\n          >\n            <Select options={qosOptions} />\n          </Form.Item>\n        </Col>\n        <Col span={8} offset={16} style={{ textAlign: 'right' }}>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Subscribe\n            </Button>\n            {\n              showUnsub ?\n                <Button type=\"danger\" style={{ marginLeft: '10px' }} onClick={handleUnsub}>\n                  Unsubscribe\n                </Button>\n                : null\n            }\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  )\n\n  return (\n    <Card\n      title=\"Subscriber\"\n    >\n      {SubForm}\n    </Card>\n  );\n}\n\nexport default Subscriber;\n"]},"metadata":{},"sourceType":"module"}