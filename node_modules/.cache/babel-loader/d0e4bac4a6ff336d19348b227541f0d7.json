{"ast":null,"code":"import _slicedToArray from\"/home/r1701/Downloads/react-mqtt-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Card,Button,Form,Input,Row,Col}from'antd';var Connection=function Connection(_ref){var connect=_ref.connect,disconnect=_ref.disconnect,connectBtn=_ref.connectBtn;var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];var record={host:'192.168.0.43',clientId:\"mqttjs_ + \".concat(Math.random().toString(16).substr(2,8)),port:9001};var onFinish=function onFinish(values){var host=values.host,clientId=values.clientId,port=values.port,username=values.username,password=values.password;var url=\"ws://\".concat(host,\":\").concat(port,\"/mqtt\");var options={keepalive:30,protocolId:'MQTT',protocolVersion:4,clean:true,reconnectPeriod:1000,connectTimeout:30*1000,will:{topic:'WillMsg',payload:'Connection Closed abnormally..!',qos:0,retain:false},rejectUnauthorized:false};options.clientId=clientId;options.username=username;options.password=password;connect(url,options);};var handleConnect=function handleConnect(){form.submit();};var handleDisconnect=function handleDisconnect(){disconnect();};var ConnectionForm=/*#__PURE__*/React.createElement(Form,{layout:\"vertical\",name:\"basic\",form:form,initialValues:record,onFinish:onFinish},/*#__PURE__*/React.createElement(Row,{gutter:20},/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(Form.Item,{label:\"Host\",name:\"host\"},/*#__PURE__*/React.createElement(Input,null))),/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(Form.Item,{label:\"Port\",name:\"port\"},/*#__PURE__*/React.createElement(Input,null))),/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(Form.Item,{label:\"Client ID\",name:\"clientId\"},/*#__PURE__*/React.createElement(Input,null)))));return/*#__PURE__*/React.createElement(Card,{title:\"Connection\",actions:[/*#__PURE__*/React.createElement(Button,{type:\"primary\",onClick:handleConnect},connectBtn),/*#__PURE__*/React.createElement(Button,{danger:true,onClick:handleDisconnect},\"Disconnect\")]},ConnectionForm);};export default Connection;","map":{"version":3,"sources":["/home/r1701/Downloads/react-mqtt-master/src/components/Hook/Connection.js"],"names":["React","Card","Button","Form","Input","Row","Col","Connection","connect","disconnect","connectBtn","useForm","form","record","host","clientId","Math","random","toString","substr","port","onFinish","values","username","password","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","payload","qos","retain","rejectUnauthorized","handleConnect","submit","handleDisconnect","ConnectionForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Form, Input, Row, Col } from 'antd';\n\nconst Connection = ({ connect, disconnect, connectBtn }) => {\n  const [form] = Form.useForm();\n  const record = {\n    host: '192.168.0.43',\n    clientId: `mqttjs_ + ${Math.random().toString(16).substr(2, 8)}`,\n    port: 9001,\n  };\n  const onFinish = (values) => {\n    const { host, clientId, port, username, password } = values;\n    const url = `ws://${host}:${port}/mqtt`;\n    const options = {\n      keepalive: 30,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false\n      },\n      rejectUnauthorized: false\n    };\n    options.clientId = clientId;\n    options.username = username;\n    options.password = password;\n    connect(url, options);\n  };\n\n  const handleConnect = () => {\n    form.submit();\n  };\n\n  const handleDisconnect = () => {\n    disconnect();\n  };\n\n  const ConnectionForm = (\n    <Form\n      layout=\"vertical\"\n      name=\"basic\"\n      form={form}\n      initialValues={record}\n      onFinish={onFinish}\n    >\n      <Row gutter={20}>\n        <Col span={8}>\n          <Form.Item\n            label=\"Host\"\n            name=\"host\"\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Port\"\n            name=\"port\"\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Client ID\"\n            name=\"clientId\"\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n \n      </Row>\n    </Form>\n  )\n\n  return (\n    <Card\n      title=\"Connection\"\n      actions={[\n        <Button type=\"primary\" onClick={handleConnect}>{connectBtn}</Button>,\n        <Button danger onClick={handleDisconnect}>Disconnect</Button>\n      ]}\n    >\n      {ConnectionForm}\n    </Card>\n  );\n}\n\nexport default Connection;\n"]},"metadata":{},"sourceType":"module"}