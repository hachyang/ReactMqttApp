{"ast":null,"code":"import _slicedToArray from\"/home/r1701/Downloads/react-mqtt-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useEffect,useState}from'react';import Connection from'./Connection';import Publisher from'./Publisher';import Subscriber from'./Subscriber';import Receiver from'./Receiver';import mqtt from'mqtt';export var QosOption=createContext([]);var qosOption=[{label:'0',value:0},{label:'1',value:1},{label:'2',value:2}];var HookMqtt=function HookMqtt(_ref){var userInfo=_ref.userInfo;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),client=_useState2[0],setClient=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSubed=_useState4[0],setIsSub=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),payload=_useState6[0],setPayload=_useState6[1];var _useState7=useState('Connect'),_useState8=_slicedToArray(_useState7,2),connectStatus=_useState8[0],setConnectStatus=_useState8[1];var mqttConnect=function mqttConnect(host,mqttOption){setConnectStatus('Connecting');setClient(mqtt.connect(host,mqttOption));};useEffect(function(){if(client){client.on('connect',function(){setConnectStatus('Connected');});client.on('error',function(err){console.error('Connection error: ',err);client.end();});client.on('reconnect',function(){setConnectStatus('Reconnecting');});client.on('message',function(topic,message){var payload={topic:topic,message:message.toString()};setPayload(payload);});}},[client]);var mqttDisconnect=function mqttDisconnect(){if(client){client.end(function(){setConnectStatus('Connect');});}};var mqttPublish=function mqttPublish(context){if(client){var topic=context.topic,qos=context.qos,_payload=context.payload;client.publish(topic,_payload,{qos:qos},function(error){if(error){console.log('Publish error: ',error);}});}};var mqttSub=function mqttSub(subscription){if(client){var topic=subscription.topic,qos=subscription.qos;client.subscribe(topic,{qos:qos},function(error){if(error){console.log('Subscribe to topics error',error);return;}setIsSub(true);});}};var mqttUnSub=function mqttUnSub(subscription){if(client){var topic=subscription.topic;client.unsubscribe(topic,function(error){if(error){console.log('Unsubscribe error',error);return;}setIsSub(false);});}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Connection,{connect:mqttConnect,disconnect:mqttDisconnect,connectBtn:connectStatus}),/*#__PURE__*/React.createElement(\"p\",null,\"Device ID:\",userInfo.deviceID),/*#__PURE__*/React.createElement(\"a\",{href:\"http://192.168.0.43:1880/ui\",style:\"color:red;\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Go Home\")),/*#__PURE__*/React.createElement(QosOption.Provider,{value:qosOption},/*#__PURE__*/React.createElement(Subscriber,{deviceID:userInfo.deviceID,sub:mqttSub,unSub:mqttUnSub,showUnsub:isSubed}),/*#__PURE__*/React.createElement(Publisher,{deviceID:userInfo.deviceID,publish:mqttPublish})),/*#__PURE__*/React.createElement(Receiver,{deviceIP:userInfo.deviceIP,payload:payload}));};export default HookMqtt;","map":{"version":3,"sources":["/home/r1701/Downloads/react-mqtt-master/src/components/Hook/index.js"],"names":["React","createContext","useEffect","useState","Connection","Publisher","Subscriber","Receiver","mqtt","QosOption","qosOption","label","value","HookMqtt","userInfo","client","setClient","isSubed","setIsSub","payload","setPayload","connectStatus","setConnectStatus","mqttConnect","host","mqttOption","connect","on","err","console","error","end","topic","message","toString","mqttDisconnect","mqttPublish","context","qos","publish","log","mqttSub","subscription","subscribe","mqttUnSub","unsubscribe","deviceID","deviceIP"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\nimport Connection from './Connection';\nimport Publisher from './Publisher';\nimport Subscriber from './Subscriber';\nimport Receiver from './Receiver';\nimport mqtt from 'mqtt';\n\nexport const QosOption = createContext([])\nconst qosOption = [\n  {\n    label: '0',\n    value: 0,\n  }, {\n    label: '1',\n    value: 1,\n  }, {\n    label: '2',\n    value: 2,\n  },\n];\n\nconst HookMqtt = ({userInfo}) => {\n  const [client, setClient] = useState(null);\n  const [isSubed, setIsSub] = useState(false);\n  const [payload, setPayload] = useState({});\n  const [connectStatus, setConnectStatus] = useState('Connect');\n\n  const mqttConnect = (host, mqttOption) => {\n    setConnectStatus('Connecting');\n    setClient(mqtt.connect(host, mqttOption));\n  };\n\n  useEffect(() => {\n    if (client) {\n      client.on('connect', () => {\n        setConnectStatus('Connected');\n      });\n      client.on('error', (err) => {\n        console.error('Connection error: ', err);\n        client.end();\n      });\n      client.on('reconnect', () => {\n        setConnectStatus('Reconnecting');\n      });\n      client.on('message', (topic, message) => {\n        const payload = { topic, message: message.toString() };\n        setPayload(payload);\n      });\n    }\n  }, [client]);\n\n  const mqttDisconnect = () => {\n    if (client) {\n      client.end(() => {\n        setConnectStatus('Connect');\n      });\n    }\n  }\n\n  const mqttPublish = (context) => {\n    if (client) {\n      const { topic, qos, payload } = context;\n      client.publish(topic, payload, { qos }, error => {\n        if (error) {\n          console.log('Publish error: ', error);\n        }\n      });\n    }\n  }\n\n  const mqttSub = (subscription) => {\n    if (client) {\n      const { topic, qos } = subscription;\n      client.subscribe(topic, { qos }, (error) => {\n        if (error) {\n          console.log('Subscribe to topics error', error)\n          return\n        }\n        setIsSub(true)\n      });\n    }\n  };\n\n  const mqttUnSub = (subscription) => {\n    if (client) {\n      const { topic } = subscription;\n      client.unsubscribe(topic, error => {\n        if (error) {\n          console.log('Unsubscribe error', error)\n          return\n        }\n        setIsSub(false);\n      });\n    }\n  };\n\n  return (\n    <>\n      <Connection connect={mqttConnect} disconnect={mqttDisconnect} connectBtn={connectStatus} />\n      <p>Device ID:{userInfo.deviceID}</p>\n      <a href=\"http://192.168.0.43:1880/ui\" style=\"color:red;\"><h1>Go Home</h1></a>\n      <QosOption.Provider value={qosOption}>\n        <Subscriber deviceID={userInfo.deviceID} sub={mqttSub} unSub={mqttUnSub} showUnsub={isSubed} />\n        <Publisher deviceID={userInfo.deviceID} publish={mqttPublish} />\n      </QosOption.Provider>\n      <Receiver deviceIP={userInfo.deviceIP} payload={payload}/>\n    </>\n  );\n}\n\nexport default HookMqtt;\n"]},"metadata":{},"sourceType":"module"}